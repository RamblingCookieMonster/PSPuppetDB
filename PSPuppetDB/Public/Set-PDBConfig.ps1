function Set-PDBConfig {
    <#
        .SYNOPSIS
            Set PSPuppetDB module configuration

        .DESCRIPTION
            Set PSPuppetDB module configuration, and live $PDBConfig module variable

            This data is used as the default for most commands

        .PARAMETER BaseUri
            Specify a Uri to use

        .PARAMETER Credential
            Specifies a user account that has permission to send the request. The default is the current user.

            Type a user name, such as "User01", "Domain01\User01", "User01@Domain.com", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet.

            When used alone, it will only supply credentials to the remote server if the remote server sends an authentication challenge request.

        .PARAMETER Certificate
            Specifies the client certificate that is used for a secure web request. Enter a variable that contains a certificate or a command or expression that gets the certificate.

            To find a certificate, use Get-PfxCertificate or use the Get-ChildItem cmdlet in the Certificate (Cert:) drive. If the certificate is not valid or does not have sufficient authority, the command fails.

        .FUNCTIONALITY
            PuppetDB
    #>
    [CmdletBinding()]
    param(
        [string]$BaseUri,
        [ValidateNotNull()]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]
        $Credential,
        [string]$Certificate,
        [string]$Path = $Script:_PDBConfigXmlPath
    )

    Switch ($PSBoundParameters.Keys)
    {
        'BaseUri'     { $Script:PDBConfig.BaseUri = $BaseUri }
        'Credential'  { $Script:PDBConfig.Credential = $Credential }
        'Certificate' { $Script:PDBConfig.Certificate = $Certificate }
    }

    $SelectParams = @{
        Property = $Script:PDBConfigProps
    }
    if(-not (Test-IsWindows)) {
        $SelectParams.Add('ExcludeProperty', 'Credential')
    }
    #Write the global variable and the xml
    $Script:PDBConfig |
        Select-Object @SelectParams |
        Export-Clixml -Path $Path -Force
}